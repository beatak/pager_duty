require "time"
module PagerDuty
  class Client
    # Module encompassing interactions with the incidents API endpoint
    #
    # PagerDuty keeps a log of all the events that happen to an incident
    #
    # These are exposed as log entries.
    #
    # Log entries give you more insight into how your team or organization is handling your incidents.
    #
    # Log entry data includes details about the event(s) that affected the incident throughout its lifecycle, such as:
    # - the data contained in events sent by the integration
    # - what users were notified and when
    # - how they were notified
    # - what user(s) acknowledged or resolved the incident
    # - any automatic actions that occurred to the incident
    # - other manual user actions, such as a reassignment or a note
    #
    # Log entries cannot be created directly through the API; they are a result of other actions. The API provides read-only access to the log entries generated by PagerDuty.    
    # @see https://v2.developer.pagerduty.com/v2/page/api-reference#!/Log_Entries
    module LogEntries
      # List all of the incident log entries across the entire account.
      # @param options [Sawyer::Resource] A customizable set of options.
      # @option options [String] :time_zone Time zone in which dates in the result will be rendered.
      # @option options [String] :since The start of the date range over which you want to search ISO8601 format
      # @option options [String] :until The end of the date range over which you want to search ISO8601 format
      # @option options [Boolean] :is_overview If <tt>true</tt>, will return a subset of log entries that show only the most important changes to the incident.
      # @option options [Array<String>] :include Array of additional details to include. (One or more of <tt>incidents</tt>, <tt>services</tt>, <tt>channels</tt> or <tt>teams</tt>.)
      # @return [Array<Sawyer::Resource>] An array of hashes representing log_entries
      # @see https://v2.developer.pagerduty.com/v2/page/api-reference#!/Log_Entries/get_log_entries
      def log_entries(options = {})
        query_params = Hash.new
        query_params[:since] = options[:since].utc.iso8601 if options[:since]
        query_params[:until] = options[:until].utc.iso8601 if options[:until]
        query_params[:time_zone] = options[:time_zone] if options[:time_zone]
        query_params[:is_overview] = options.fetch(:is_overview, false)
        query_params[:include]       = options[:include] if options[:include]

        response = get "/log_entries", options.merge({query: query_params})
        response[:log_entries]
      end
      alias :list_log_entries :log_entries

      # Get details for a specific incident log entry. This method provides additional information you can use to get at raw event data.
      # 
      # @param id [String] A log entry id (required)
      # @param options [Sawyer::Resource] A customizable set of options.
      # @option options [String] :time_zone Default to UTC
      # @option options [Array<String>] :include Array of additional details to include. (One or more of <tt>incidents</tt>, <tt>services</tt>, <tt>channels</tt> or <tt>teams</tt>.)
      # @return [Sawyer::Resource] A hash representing log entry
      # @see https://v2.developer.pagerduty.com/v2/page/api-reference#!/Log_Entries/get_log_entries_id
      def log_entry(id, options = {})
        query_params = Hash.new
        query_params[:time_zone] = options[:time_zone] if options[:time_zone]
        query_params[:include]   = options[:include] if options[:include]

        response = get "/log_entries/#{id}", options.merge({query: query_params})
        response[:log_entry]
      end
      alias :get_log_entry :log_entry
    end
  end
end